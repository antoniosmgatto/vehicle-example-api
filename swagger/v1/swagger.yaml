---
openapi: 3.0.1
info:
  title: Vehicle API V1
  version: v1
  description: This is the first version of my API
components:
  schemas:
    errors_object:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errors_map"
    errors_map:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    vehicle:
      type: object
      properties:
        id:
          type: integer
          example: 1
        license_plate:
          type: string
          example: AAA9999
        make:
          type: string
          example: Mercedes-Benz
        model:
          type: string
          example: '1113'
        color:
          type: string
          example: Azul
        category:
          type: string
          example: Caminhão
        vin:
          type: string
          example: 3TW HZXRAU W3 AA2893
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - license_plate
      - make
      - model
      - color
      - category
      - vin
    vehicle_new:
      type: object
      properties:
        license_plate:
          type: string
          example: ABC9999
        make:
          type: string
          example: Mercedes-Benz
        model:
          type: string
          example: '1113'
        color:
          type: string
          example: Azul
        category:
          type: string
          example: Caminhão
        vin:
          type: string
          example: 3TW HZXRAU W3 AA2893
      required:
      - license_plate
      - make
      - model
      - color
      - category
      - vin
    vehicle_edit:
      type: object
      properties:
        license_plate:
          type: string
          example: AAA9999
        make:
          type: string
          example: Mercedes-Benz
        model:
          type: string
          example: '1113'
        color:
          type: string
          example: Azul
        category:
          type: string
          example: Caminhão
        vin:
          type: 3TW HZXRAU W3 AA2893
paths:
  "/vehicles":
    get:
      summary: list vehicles
      tags:
      - Vehicles
      description: List all vehicles
      responses:
        '200':
          description: success
          content:
            application/json:
              example: []
    post:
      summary: create vehicle
      tags:
      - Vehicles
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              example:
                id: 479
                license_plate: IGO62Q0
                make: Ford
                model: A5
                color: Grey
                category: Convertible
                vin: 4Q1MV790FBPB93260
                created_at: '2021-05-21T20:16:27.381Z'
                updated_at: '2021-05-21T20:16:27.381Z'
        '422':
          description: unprocessable_entity
          content:
            application/json:
              example:
                errors:
                  license_plate:
                  - can't be blank
                  make:
                  - can't be blank
                  model:
                  - can't be blank
                  color:
                  - can't be blank
                  category:
                  - can't be blank
                  vin:
                  - can't be blank
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/vehicle_new"
  "/vehicles/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show vehicle
      tags:
      - Vehicles
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                id: 480
                license_plate: XVH-8187
                make: BMW
                model: CR-V
                color: Violet
                category: SUV
                vin: 51E3M9Z8U80T30790
                created_at: '2021-05-21T20:16:27.450Z'
                updated_at: '2021-05-21T20:16:27.450Z'
        '404':
          description: not_found
          content:
            application/json:
              example:
                message: Record not found
    patch:
      summary: update vehicle
      tags:
      - Vehicles
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                license_plate: EUC5E72
                model: Camry
                make: Nissan
                color: Grey
                category: Extended Cab Pickup
                vin: 5BI6USVHJ1GJ45343
                id: 481
                created_at: '2021-05-21T20:16:27.517Z'
                updated_at: '2021-05-21T20:16:27.543Z'
        '404':
          description: not_found
          content:
            application/json:
              example:
                message: Record not found
        '422':
          description: unprocessable_entity
          content:
            application/json:
              example:
                errors:
                  license_plate:
                  - can't be blank
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/vehicle_edit"
    put:
      summary: update vehicle
      tags:
      - Vehicles
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                license_plate: WXX-7542
                model: Mustang
                make: Ford
                color: Black
                category: Convertible
                vin: 837679B2G20989251
                id: 483
                created_at: '2021-05-21T20:16:27.654Z'
                updated_at: '2021-05-21T20:16:27.708Z'
        '404':
          description: not_found
          content:
            application/json:
              example:
                message: Record not found
        '422':
          description: unprocessable_entity
          content:
            application/json:
              example:
                errors:
                  license_plate:
                  - can't be blank
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/vehicle_edit"
    delete:
      summary: delete vehicle
      tags:
      - Vehicles
      responses:
        '204':
          description: no_content
        '404':
          description: not_found
          content:
            application/json:
              example:
                message: Record not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
